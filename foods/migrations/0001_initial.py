# Generated by Django 5.0.3 on 2024-05-07 15:13

import django.core.validators
import django.db.models.deletion
import utils.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Nutrition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nutrients", models.JSONField(blank=True, null=True)),
                ("properties", models.JSONField(blank=True, null=True)),
                ("flavonoids", models.JSONField(blank=True, null=True)),
                ("percent_protein", models.FloatField(blank=True, null=True)),
                ("percent_fat", models.FloatField(blank=True, null=True)),
                ("percent_carbs", models.FloatField(blank=True, null=True)),
                ("weight_per_serving", models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "spoonacular_id",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                ("original", models.CharField(max_length=255, null=True)),
                ("originalName", models.CharField(max_length=255, null=True)),
                ("name", models.CharField(max_length=255, null=True)),
                ("amount", models.FloatField(null=True)),
                ("unit", models.CharField(max_length=50, null=True)),
                ("unitShort", models.CharField(max_length=50, null=True)),
                ("unitLong", models.CharField(max_length=50, null=True)),
                ("possibleUnits", models.JSONField(null=True)),
                ("estimatedCost_value", models.FloatField(null=True)),
                ("estimatedCost_unit", models.CharField(max_length=50, null=True)),
                ("consistency", models.CharField(max_length=50, null=True)),
                ("shoppingListUnits", models.JSONField(null=True)),
                ("aisle", models.CharField(max_length=255, null=True)),
                ("image", models.URLField(null=True)),
                ("meta", models.JSONField(null=True)),
                ("categoryPath", models.JSONField(null=True)),
                (
                    "nutrition",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe_ingredient",
                        to="foods.nutrition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("image", models.URLField(max_length=600)),
                (
                    "servings",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "readyInMinutes",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "spoonacular_id",
                    models.IntegerField(blank=True, null=True, unique=True),
                ),
                ("sourceName", models.CharField(max_length=100)),
                ("sourceUrl", models.URLField(max_length=600)),
                (
                    "healthScore",
                    models.FloatField(
                        null=True, validators=[utils.validators.validate_positive_float]
                    ),
                ),
                (
                    "spoonacularScore",
                    models.FloatField(
                        null=True, validators=[utils.validators.validate_positive_float]
                    ),
                ),
                (
                    "pricePerServing",
                    models.FloatField(
                        null=True, validators=[utils.validators.validate_positive_float]
                    ),
                ),
                ("analyzedInstructions", models.JSONField(null=True)),
                ("cheap", models.BooleanField(default=False, null=True)),
                ("creditsText", models.TextField(max_length=200, null=True)),
                ("cuisines", models.JSONField(null=True)),
                ("dairyFree", models.BooleanField(default=False, null=True)),
                ("diets", models.JSONField(null=True)),
                ("gaps", models.CharField(max_length=10, null=True)),
                ("glutenFree", models.BooleanField(null=True)),
                ("instructions", models.TextField(null=True)),
                ("ketogenic", models.BooleanField(null=True)),
                ("lowFodmap", models.BooleanField(null=True)),
                ("occasions", models.JSONField(null=True)),
                ("sustainable", models.BooleanField(null=True)),
                ("vegan", models.BooleanField(null=True)),
                ("vegetarian", models.BooleanField(null=True)),
                ("veryHealthy", models.BooleanField(null=True)),
                ("veryPopular", models.BooleanField(null=True)),
                ("whole30", models.BooleanField(null=True)),
                ("weightWatcherSmartPoints", models.IntegerField(null=True)),
                ("dishTypes", models.JSONField(null=True)),
                ("extendedIngredients", models.JSONField(null=True)),
                ("summary", models.TextField(null=True)),
                ("winePairing", models.JSONField(null=True)),
                (
                    "ingredients",
                    models.ManyToManyField(
                        related_name="recipes", to="foods.ingredient"
                    ),
                ),
                (
                    "nutrition",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe_nutrition",
                        to="foods.nutrition",
                    ),
                ),
            ],
        ),
    ]
