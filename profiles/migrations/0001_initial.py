# Generated by Django 5.0.2 on 2024-04-09 17:57

import django.core.validators
import django.db.models.deletion
import utils.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('foods', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=25, unique=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('password', models.CharField(max_length=85, validators=[django.core.validators.MinLengthValidator(6)])),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=50)),
                ('email', models.EmailField(max_length=50, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')])),
                ('weight', models.FloatField(default=80, validators=[utils.validators.validate_positive_float])),
                ('height', models.FloatField(default=170, validators=[utils.validators.validate_positive_float])),
                ('date_of_birth', models.DateField(validators=[utils.validators.validate_is_date_before_today])),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('activityLevel', models.PositiveIntegerField(default=1, validators=[utils.validators.validate_activity_level])),
                ('saved_recipes', models.ManyToManyField(related_name='saved_by_profiles', to='foods.recipe')),
            ],
        ),
    ]
