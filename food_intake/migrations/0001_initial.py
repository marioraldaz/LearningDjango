# Generated by Django 5.0.3 on 2024-05-07 15:13

import django.core.validators
import django.db.models.deletion
import utils.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("foods", "0001_initial"),
        ("profiles", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="FoodIntake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "meal_type",
                    models.CharField(
                        choices=[
                            ("Breakfast", "Breakfast"),
                            ("Lunch", "Lunch"),
                            ("Dinner", "Dinner"),
                            ("Snack", "Snack"),
                        ],
                        max_length=20,
                        validators=[utils.validators.validate_meal_type],
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        validators=[utils.validators.validate_is_date_before_today]
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.userprofile",
                    ),
                ),
            ],
            options={
                "db_table": "foodintake_foodintake",
            },
        ),
        migrations.CreateModel(
            name="FoodIntakeDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "food_intake",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="food_intake.foodintake",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="foods.recipe"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NutritionStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_week_calories", models.FloatField(blank=True, null=True)),
                ("last_week_fat", models.FloatField(blank=True, null=True)),
                ("last_week_saturated_fat", models.FloatField(blank=True, null=True)),
                ("last_week_carbohydrates", models.FloatField(blank=True, null=True)),
                ("last_week_sugar", models.FloatField(blank=True, null=True)),
                ("last_week_protein", models.FloatField(blank=True, null=True)),
                ("last_week_cholesterol", models.FloatField(blank=True, null=True)),
                ("last_week_sodium", models.FloatField(blank=True, null=True)),
                ("last_week_fiber", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_c", models.FloatField(blank=True, null=True)),
                ("last_week_manganese", models.FloatField(blank=True, null=True)),
                ("last_week_folate", models.FloatField(blank=True, null=True)),
                ("last_week_potassium", models.FloatField(blank=True, null=True)),
                ("last_week_magnesium", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_a", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_b6", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_b12", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_d", models.FloatField(blank=True, null=True)),
                ("last_week_calcium", models.FloatField(blank=True, null=True)),
                ("last_week_iron", models.FloatField(blank=True, null=True)),
                ("last_week_zinc", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_e", models.FloatField(blank=True, null=True)),
                ("last_week_vitamin_k", models.FloatField(blank=True, null=True)),
                ("last_week_omega_3", models.FloatField(blank=True, null=True)),
                ("last_week_omega_6", models.FloatField(blank=True, null=True)),
                ("last_30_days_calories", models.FloatField(blank=True, null=True)),
                ("last_30_days_fat", models.FloatField(blank=True, null=True)),
                (
                    "last_30_days_saturated_fat",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "last_30_days_carbohydrates",
                    models.FloatField(blank=True, null=True),
                ),
                ("last_30_days_sugar", models.FloatField(blank=True, null=True)),
                ("last_30_days_protein", models.FloatField(blank=True, null=True)),
                ("last_30_days_cholesterol", models.FloatField(blank=True, null=True)),
                ("last_30_days_sodium", models.FloatField(blank=True, null=True)),
                ("last_30_days_fiber", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_c", models.FloatField(blank=True, null=True)),
                ("last_30_days_manganese", models.FloatField(blank=True, null=True)),
                ("last_30_days_folate", models.FloatField(blank=True, null=True)),
                ("last_30_days_potassium", models.FloatField(blank=True, null=True)),
                ("last_30_days_magnesium", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_a", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_b6", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_b12", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_d", models.FloatField(blank=True, null=True)),
                ("last_30_days_calcium", models.FloatField(blank=True, null=True)),
                ("last_30_days_iron", models.FloatField(blank=True, null=True)),
                ("last_30_days_zinc", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_e", models.FloatField(blank=True, null=True)),
                ("last_30_days_vitamin_k", models.FloatField(blank=True, null=True)),
                ("last_30_days_omega_3", models.FloatField(blank=True, null=True)),
                ("last_30_days_omega_6", models.FloatField(blank=True, null=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserDaily",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_nutrients", models.JSONField(blank=True, null=True)),
                ("total_properties", models.JSONField(blank=True, null=True)),
                ("total_flavonoids", models.JSONField(blank=True, null=True)),
                ("total_caloric_breakdown", models.JSONField(blank=True, null=True)),
                ("total_weight_per_serving", models.JSONField(blank=True, null=True)),
                (
                    "profile",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.userprofile",
                    ),
                ),
            ],
        ),
    ]
